#!/bin/bash
sudo -u ec2-user -i <<'EOF'

env_name=conda_mxnet_p36
env_name_short=mxnet_p36

# Install RISE for slideshow
source /home/ec2-user/anaconda3/bin/activate JupyterSystemEnv
/home/ec2-user/anaconda3/bin/conda install -y -c conda-forge rise
source /home/ec2-user/anaconda3/bin/deactivate

# Enable scrolling in RISE slideshows
python3 -c 'from traitlets.config.manager import BaseJSONConfigManager; from pathlib import Path; path = Path.home() / ".jupyter" / "nbconfig"; cm = BaseJSONConfigManager(config_dir=str(path)); cm.update( "rise", { "scroll": True})'

# Create a new environment
source /home/ec2-user/anaconda3/bin/activate $env_name_short

# Update conda packages to match requirements of pip packages installed below
# This works around the following error during gluonnlp installation:
# "ERROR: Cannot uninstall 'llvmlite'. It is a distutils installed project and
# thus we cannot accurately determine which files belong to it which would lead
# to only a partial uninstall."
# The error is due to pip attempting to update the pre-installed outdated numba
# dependency.

conda update -y numba llvmlite

# Install mxnet and d2l
pip uninstall -y mxnet-cu100mkl mxnet-cu101mkl
#pip install --pre mxnet-cu101==1.6.0b20191122
pip install mxnet-cu101 --pre -U
pip install https://github.com/dmlc/gluon-nlp/tarball/v0.9.x
pip install sagemaker
# sagemaker requires requests-2.20.1 but doesn't specify it correctly
pip install "requests==2.20.1"

# Install system packages not provided by Amazon Linux by default
sudo yum install -y tree

# Set MXNET_HOME to avoid running out of space
touch /home/ec2-user/anaconda3/envs/$env_name_short/etc/conda/activate.d/env_vars.sh
echo "export MXNET_HOME=/home/ec2-user/SageMaker" >> /home/ec2-user/anaconda3/envs/$env_name_short/etc/conda/activate.d/env_vars.sh

# Configure docker data-dir to avoid running out of space
sudo service docker stop
sudo rm /etc/docker/daemon.json
sudo mv /var/lib/docker /home/ec2-user/SageMaker/docker-data  # /home/ec2-user/SageMaker has more disk space
sudo bash -c 'cat > /etc/docker/daemon.json <<EOL
{

    "runtimes": {
        "nvidia": {
            "path": "nvidia-container-runtime",
            "runtimeArgs": []
        }
    },
    "data-root": "/home/ec2-user/SageMaker/docker-data"
}
EOL'
sudo service docker start

# Get ECR credentials for SageMaker deployment tutorial.
# (The 763104351884 account hosts docker images that we rely on)
$(aws ecr get-login --no-include-email --registry-ids 763104351884)

# Get notebooks from git
cd ~/SageMaker/
curl -L https://github.com/awshlabs/Jan2020-NLPLab/archive/master.zip -o lab.zip
unzip lab.zip
rm lab.zip
mv Jan2020-NLPLab-master ako2020-bert

# Set notebooks' default kernel to $env_name
for f in tutorial/*ipynb; do
    sed -i s/\"language_info\":\ {/\"kernelspec\":\ {\"display_name\":\ \"$env_name\",\"language\":\ \"python\",\ \"name\":\ \"$env_name\"\},\"language_info\":\ {/g $f
done

source /home/ec2-user/anaconda3/bin/deactivate

EOF
